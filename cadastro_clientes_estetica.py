# -*- coding: utf-8 -*-
"""cadastro clientes estetica

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CroifPqc0xc0njjtg_5rWit45LkxokZo
"""

import sqlite3
import pandas as pd

db_path = '/content/clinica_estetica.db'

def conectar():
    return sqlite3.connect(db_path)

def criar_tabelas():
    conn = conectar()
    cursor = conn.cursor()

    cursor.execute('''
    CREATE TABLE IF NOT EXISTS clientes (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        nome TEXT NOT NULL,
        telefone TEXT,
        email TEXT
    )
    ''')

    cursor.execute('''
    CREATE TABLE IF NOT EXISTS servicos (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        nome TEXT NOT NULL,
        duracao INTEGER NOT NULL -- duração em minutos
    )
    ''')

    cursor.execute('''
    CREATE TABLE IF NOT EXISTS agendamentos (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        cliente_id INTEGER,
        servico_id INTEGER,
        data_agendamento TEXT,
        hora_agendamento TEXT,
        FOREIGN KEY(cliente_id) REFERENCES clientes(id),
        FOREIGN KEY(servico_id) REFERENCES servicos(id)
    )
    ''')

    conn.commit()
    conn.close()

def inserir_cliente(nome, telefone, email):
    conn = conectar()
    cursor = conn.cursor()
    cursor.execute('''
    INSERT INTO clientes (nome, telefone, email) VALUES (?, ?, ?)
    ''', (nome, telefone, email))
    conn.commit()
    conn.close()

def inserir_servico(nome, duracao):
    conn = conectar()
    cursor = conn.cursor()
    cursor.execute('''
    INSERT INTO servicos (nome, duracao) VALUES (?, ?)
    ''', (nome, duracao))
    conn.commit()
    conn.close()

def inserir_agendamento(cliente_id, servico_id, data_agendamento, hora_agendamento):
    conn = conectar()
    cursor = conn.cursor()
    cursor.execute('''
    INSERT INTO agendamentos (cliente_id, servico_id, data_agendamento, hora_agendamento) VALUES (?, ?, ?, ?)
    ''', (cliente_id, servico_id, data_agendamento, hora_agendamento))
    conn.commit()
    conn.close()

def consultar_clientes():
    conn = conectar()
    df = pd.read_sql_query('SELECT * FROM clientes', conn)
    conn.close()
    return df

def consultar_servicos():
    conn = conectar()
    df = pd.read_sql_query('SELECT * FROM servicos', conn)
    conn.close()
    return df

def consultar_agendamentos():
    conn = conectar()
    df = pd.read_sql_query('SELECT * FROM agendamentos', conn)
    conn.close()
    return df

def exportar_para_excel():
    clientes_df = consultar_clientes()
    servicos_df = consultar_servicos()
    agendamentos_df = consultar_agendamentos()

    with pd.ExcelWriter('/content/clinica_estetica_dados.xlsx', engine='openpyxl') as writer:
        clientes_df.to_excel(writer, sheet_name='Clientes', index=False)
        servicos_df.to_excel(writer, sheet_name='Servicos', index=False)
        agendamentos_df.to_excel(writer, sheet_name='Agendamentos', index=False)

    print("Dados exportados para 'clinica_estetica_dados.xlsx' com sucesso!")

criar_tabelas()

inserir_cliente('Ana Silva', '123456789', 'ana@exemplo.com')
inserir_servico('Depilação', 30)
inserir_agendamento(1, 1, '2024-09-20', '10:00')

inserir_cliente('João Oliveira', '987654321', 'joao@exemplo.com')
inserir_servico('Massagem', 60)
inserir_agendamento(2, 2, '2024-09-21', '11:00')

exportar_para_excel()


from google.colab import files
files.download('/content/clinica_estetica_dados.xlsx')