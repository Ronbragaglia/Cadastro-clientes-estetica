# -*- coding: utf-8 -*-
"""cadastro clientes estetica

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CroifPqc0xc0njjtg_5rWit45LkxokZo
"""

import sqlite3

db_path = '/content/clinica_estetica.db'

conn = sqlite3.connect(db_path)
cursor = conn.cursor()


cursor.execute('''
CREATE TABLE IF NOT EXISTS clientes (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome TEXT NOT NULL,
    telefone TEXT,
    email TEXT
)
''')


cursor.execute('''
CREATE TABLE IF NOT EXISTS servicos (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome TEXT NOT NULL,
    duracao INTEGER NOT NULL -- duração em minutos
)
''')

cursor.execute('''
CREATE TABLE IF NOT EXISTS agendamentos (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    cliente_id INTEGER,
    servico_id INTEGER,
    data_agendamento TEXT,
    hora_agendamento TEXT,
    FOREIGN KEY(cliente_id) REFERENCES clientes(id),
    FOREIGN KEY(servico_id) REFERENCES servicos(id)
)
''')

conn.commit()
conn.close()

print("Banco de dados criado com sucesso!")

import sqlite3
import pandas as pd

def conectar():
    return sqlite3.connect(db_path)

def inserir_cliente(nome, telefone, email):
    conn = conectar()
    cursor = conn.cursor()
    cursor.execute('''
    INSERT INTO clientes (nome, telefone, email) VALUES (?, ?, ?)
    ''', (nome, telefone, email))
    conn.commit()
    conn.close()

def inserir_servico(nome, duracao):
    conn = conectar()
    cursor = conn.cursor()
    cursor.execute('''
    INSERT INTO servicos (nome, duracao) VALUES (?, ?)
    ''', (nome, duracao))
    conn.commit()
    conn.close()

def inserir_agendamento(cliente_id, servico_id, data_agendamento, hora_agendamento):
    conn = conectar()
    cursor = conn.cursor()
    cursor.execute('''
    INSERT INTO agendamentos (cliente_id, servico_id, data_agendamento, hora_agendamento) VALUES (?, ?, ?, ?)
    ''', (cliente_id, servico_id, data_agendamento, hora_agendamento))
    conn.commit()
    conn.close()

def consultar_clientes():
    conn = conectar()
    df = pd.read_sql_query('SELECT * FROM clientes', conn)
    conn.close()
    return df

def consultar_servicos():
    conn = conectar()
    df = pd.read_sql_query('SELECT * FROM servicos', conn)
    conn.close()
    return df

def consultar_agendamentos():
    conn = conectar()
    df = pd.read_sql_query('SELECT * FROM agendamentos', conn)
    conn.close()
    return df

inserir_cliente('Ana Silva', '123456789', 'ana@exemplo.com')
inserir_servico('Depilação', 30)
inserir_agendamento(1, 1, '2024-09-20', '10:00')

print("Clientes:")
print(consultar_clientes())

print("Serviços:")
print(consultar_servicos())

print("Agendamentos:")
print(consultar_agendamentos())

import time

start_time = time.time()
inserir_cliente('João Oliveira', '987654321', 'joao@exemplo.com')
end_time = time.time()
print(f"Tempo de inserção de cliente: {end_time - start_time} segundos")

start_time = time.time()
clientes_df = consultar_clientes()
end_time = time.time()
print(f"Tempo de consulta de clientes: {end_time - start_time} segundos")

print(clientes_df)

import matplotlib.pyplot as plt
import seaborn as sns

def visualizar_servicos():
    servicos_df = consultar_servicos()
    plt.figure(figsize=(10, 6))
    sns.barplot(x='nome', y='duracao', data=servicos_df)
    plt.title('Duração dos Serviços')
    plt.xticks(rotation=45)
    plt.xlabel('Serviço')
    plt.ylabel('Duração (min)')
    plt.show()

visualizar_servicos()

